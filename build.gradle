// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {

        // global variables
        compile_sdk_version = 29
        kotlin_version = '1.4.31'
        min_sdk_version = 21

        // local variables
        def androidx_test_version = '1.2.0'
        def annotations_version = '1.1.0'
        def appcompat_version = '1.1.0'
        def constraint_layout_version = '1.1.3'
        def coroutines_android_version = '1.3.5'
        def espresso_version = '3.3.0'
        def gson_version = '2.8.6'
        def junit_version = '4.13.2'
        def junit_ext_version = '1.1.2'
        def lifecycle_version = '2.1.0'
        def live_data_version = '2.2.0-rc02'
        def material_version = '1.1.0-alpha09'
        def retrofit_gson_version = '2.6.2'
        def retrofit_version = '2.6.2'
        def retrofit_logging_version = '3.8.0'
        def room_version = '2.3.0-alpha01'
        def work_version = '2.2.0'
        def mockito_version = '3.4.6'
        def arch_core_version = '2.1.0'

        libraries = [
                // Kotlin standard library
                "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",

                // Coroutines
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_android_version}",

                // Android UI and appcompat
                "androidx.appcompat:appcompat:$appcompat_version",
                "com.google.android.material:material:$material_version",
                "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
                "androidx.fragment:fragment-ktx:1.1.0",

                // ViewModel and LiveData
                "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
                "androidx.lifecycle:lifecycle-livedata-ktx:$live_data_version",
                "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",

                // network & serialization
                "com.google.code.gson:gson:$gson_version",
                "com.squareup.retrofit2:converter-gson:$retrofit_gson_version",
                "com.squareup.retrofit2:retrofit:$retrofit_version",
                "com.squareup.okhttp3:logging-interceptor:$retrofit_logging_version",

                // threading
                "androidx.annotation:annotation:$annotations_version"
        ]

        arch_libraries = [
                "androidx.work:work-runtime-ktx:$work_version",
                // Room for database
                "androidx.room:room-ktx:$room_version"
        ]

        librariesKapt = [
                "androidx.room:room-compiler:$room_version"
        ]

        testLibraries = [
                "junit:junit:$junit_version",
                "androidx.arch.core:core-testing:$arch_core_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version"
        ]

        androidTestLibraries = [
                "androidx.test.ext:junit:$junit_ext_version",
                "androidx.test.espresso:espresso-core:$espresso_version",
                "androidx.test:rules:$androidx_test_version",
                "androidx.arch.core:core-testing:$arch_core_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",
                "org.mockito:mockito-android:$mockito_version"
        ]
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}